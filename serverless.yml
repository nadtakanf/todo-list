service: todo-list

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "us-west-1"}
  logs:
    restApi: true
  lambdaHashingVersion: 20201221
  environment:
    REGION: ${self:provider.region}
    tableName: ${self:custom.tableName}
  # eventBridge:
  #   useCloudFormation: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:custom.tableName}
        - Effect: Allow
          Action: 
            - events:PutEvents
            - events:listEventBuses
          Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/*

package:
  patterns:
    - '!resources/**'

custom:
  tableName: todo-list-${self:provider.stage}
  todoCognitoName: ${self:service}-cognito

functions:
  catch-all:
    handler: src/catch-all.handler
    events:
      - http:
          path: /{any+} # this matches any path, the token 'any' doesn't mean anything special
          method: ANY
    environment:
      EVENT_BRIDGE: "default"
  
  todo-create:
    handler: src/create.handler
    events:
      - eventBridge:
          pattern:
            source: # rule
              - source.events
            detail-type:
              - create

  todo-update:
    handler: src/update.handler
    events:
      - eventBridge:
          pattern:
            source: # rule
              - source.events
            detail-type:
              - update

  todo-delete:
    handler: src/delete.handler
    events:
      - eventBridge:
          pattern:
            source: # rule
              - source.events
            detail-type:
              - delete
  
  todo-search:
    handler: src/search.handler
    events:
      - eventBridge:
          pattern:
            source: # rule
              - source.events
            detail-type:
              - search

plugins:
  - serverless-webpack
